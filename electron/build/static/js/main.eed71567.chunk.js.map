{"version":3,"sources":["context/appContext.js","components/app/LabelButtons.js","firebase.js","api/notes.js","components/app/NoteItem.js","components/MainEvent.js","core/utils.js","api/auth.js","components/reusable/Input.js","components/onboard/Login.js","components/onboard/Register.js","components/OnBoard.js","App.js","serviceWorker.js","context/appReducer.js","context/AppState.js","index.js"],"names":["AppContext","createContext","LabelButtons","onLogout","useContext","Label","as","color","attached","content","onClick","href","target","rel","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getNotes","uid","a","collection","get","notes","docs","map","doc","nid","id","data","addNote","title","importance","add","Date","now","date","moment","format","req","NoteItem","Segment","className","inverted","style","width","maxHeight","overflowY","backgroundColor","i","k","raised","key","size","Card","header","description","marginTop","marginBottom","MainEvent","useState","setTitle","setContent","radioValue","setRadioValue","state","loadNotes","handleSubmit","then","Grid","Column","Form","Input","label","value","placeholder","onChange","e","Group","inline","Radio","checked","TextArea","Button","emailValidator","email","test","passwordValidator","password","nameValidator","name","signInUser","auth","createUserWithEmailAndPassword","cred","user","set","currentUser","updateProfile","displayName","code","error","loginUser","signInWithEmailAndPassword","errorText","props","Login","setEmail","setPassword","loading","setLoading","setError","history","useHistory","handleLogin","emailError","passwordError","response","push","Header","Row","type","mode","Register","setName","handleSignUp","nameError","OnBoard","toggleLogin","setToggleLogin","toggleRegister","setToggleRegister","floated","toggle","active","App","loggedIn","basename","exact","path","to","component","Boolean","window","location","hostname","match","payload","notesLoaded","AppState","useReducer","appReducer","dispatch","res","sort","b","onNotes","useCallback","useEffect","authCheck","onAuthStateChanged","username","Provider","signOut","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"0QAIeA,EAFIC,0B,QC2BJC,EAzBM,WACnB,IACQC,EADMC,qBAAWJ,GACjBG,SACR,OACE,oCACE,kBAACE,EAAA,EAAD,CACEC,GAAG,IACHC,MAAM,QACNC,SAAS,YACTC,QAAQ,UACRC,QAAS,kBAAMP,OAEjB,kBAACE,EAAA,EAAD,CACEC,GAAG,IACHC,MAAM,QACNC,SAAS,cACTC,QAAQ,gCACRE,KAAK,yCACLC,OAAO,SACPC,IAAI,0B,mECVG,EAACC,OAAcC,OAE1BD,QADAA,gBAZW,CACbE,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,2BCNXC,EAAKV,EAASW,YAEPC,EAAQ,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBC,EAAaL,EAAGK,WAAH,sBAA6BF,IAD1B,SAGFE,EAAWC,MAHT,cAGhBC,EAHgB,yBAIfA,EAAMC,KAAKC,KAAI,SAACC,GACrB,OAAO,aAAEC,IAAKD,EAAIE,IAAOF,EAAIG,YALT,2CAAH,sDASRC,EAAO,uCAAG,WAAOX,EAAKY,EAAO9B,EAAS+B,GAA5B,iBAAAZ,EAAA,6DACfC,EAAaL,EAAGK,WAAH,sBAA6BF,IAD3B,SAGHE,EAAWY,IAAI,CAC/BN,IAAKO,KAAKC,MACVJ,QACA9B,UACA+B,aACAI,KAAMC,MAASC,OAAO,UARH,cAGfC,EAHe,yBAWdA,GAXc,2CAAH,4D,SCmDLC,EA9DE,WACf,IACQjB,EADM3B,qBAAWJ,GACjB+B,MAER,OACE,kBAACkB,EAAA,EAAD,CACEC,UAAU,YACVC,UAAQ,EACRC,MAAO,CACLC,MAAO,OACPC,UAAW,OACXC,UAAW,SACXC,gBAAiB,YAGlBzB,EAAME,KAAI,SAACwB,EAAGC,GACb,OACE,kBAACT,EAAA,EAAD,CACEU,QAAM,EACNC,IAAKF,EACLN,MAAO,CACLI,gBAAiB,YAGnB,kBAACnD,EAAA,EAAD,CACEE,MACmB,SAAjBkD,EAAEjB,WACE,OACiB,SAAjBiB,EAAEjB,WACF,OACiB,SAAjBiB,EAAEjB,WACF,SACiB,SAAjBiB,EAAEjB,WACF,MACA,KAENhC,SAAS,YACTC,QAASgD,EAAEjB,aAEb,kBAACnC,EAAA,EAAD,CACEwD,KAAK,OACLtD,MAAM,QACNC,SAAS,cACTC,QAASgD,EAAEb,OAGb,kBAACkB,EAAA,EAAD,CACEC,OAAQN,EAAElB,MACVyB,YAAaP,EAAEhD,QACf2C,MAAO,CACLa,UAAW,GACXC,aAAc,GACdV,gBAAiB,mBCsBlBW,EAxEG,WAAO,IAAD,EACIC,mBAAS,IADb,mBACf7B,EADe,KACR8B,EADQ,OAEQD,mBAAS,IAFjB,mBAEf3D,EAFe,KAEN6D,EAFM,OAGcF,mBAAS,MAHvB,mBAGfG,EAHe,KAGHC,EAHG,KAIhBC,EAAQrE,qBAAWJ,GACjB2B,EAA0B8C,EAA1B9C,IAAK+C,EAAqBD,EAArBC,UAAW3C,EAAU0C,EAAV1C,MAEpBS,EAAa+B,EAEXI,EAAY,uCAAG,sBAAA/C,EAAA,sEACbU,EAAQX,EAAKY,EAAO9B,EAAS+B,GAAYoC,MAAK,kBAAMF,OADvC,mFAAH,qDAGlB,OACE,6BACE,kBAACG,EAAA,EAAD,KACE,uBAAGzC,GAAG,SAAN,UAEF,kBAACyC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAazB,MAAO,IAClB,kBAACJ,EAAA,EAAD,CAASU,QAAM,EAACP,MAAO,CAAEI,gBAAiB,YACxC,kBAACuB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CACEC,MAAM,QACNC,MAAO3C,EACP4C,YAAY,QACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBb,EAASa,MAEvC,kBAACH,EAAA,EAAKO,MAAN,CAAYC,QAAM,GAChB,sDACA,kBAACR,EAAA,EAAKS,MAAN,CACEP,MAAM,OACNC,MAAM,OACNO,QAAwB,SAAflB,EACTa,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBV,EAAcU,MAE5C,kBAACH,EAAA,EAAKS,MAAN,CACEP,MAAM,OACNC,MAAM,OACNO,QAAwB,SAAflB,EACTa,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBV,EAAcU,MAE5C,kBAACH,EAAA,EAAKS,MAAN,CACEP,MAAM,OACNC,MAAM,OACNO,QAAwB,SAAflB,EACTa,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBV,EAAcU,MAE5C,kBAACH,EAAA,EAAKS,MAAN,CACEP,MAAM,OACNC,MAAM,OACNO,QAAwB,SAAflB,EACTa,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBV,EAAcU,OAG9C,kBAACH,EAAA,EAAKW,SAAN,CACET,MAAM,UACNC,MAAOzE,EACP0E,YAAY,uBACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBZ,EAAWY,MAEzC,kBAACH,EAAA,EAAKY,OAAN,CAAapF,MAAM,QAAQG,QAAS,kBAAMiE,MAA1C,aAMN,kBAACE,EAAA,EAAKC,OAAN,CAAazB,MAAO,GAAItB,GAAS,kBAAC,EAAD,U,kBCxE5B6D,EAAiB,SAAAC,GAG5B,OAAKA,GAASA,EAAM9E,QAAU,EAAU,yBAF7B,eAGH+E,KAAKD,GAEN,GAFqB,yCAKjBE,EAAoB,SAAAC,GAC/B,OAAKA,GAAYA,EAASjF,QAAU,EAAU,4BAEvC,IAGIkF,EAAgB,SAAAC,GAC3B,OAAKA,GAAQA,EAAKnF,QAAU,EAAU,wBAE/B,ICXIoF,G,OAAU,uCAAG,iCAAAvE,EAAA,6DAASsE,EAAT,EAASA,KAAML,EAAf,EAAeA,MAAOG,EAAtB,EAAsBA,SAAtB,kBAEhBlF,EACHsF,OACAC,+BAA+BR,EAAOG,GACtCpB,MAAK,SAAC0B,GAAD,OACJxF,EAASW,YAAYI,WAAW,SAASK,IAAIoE,EAAKC,KAAK5E,KAAK6E,IAAI,CAC9DN,KAAMA,EACNL,MAAOA,OARS,cAYtB/E,EAASsF,OAAOK,YAAYC,cAAc,CACxCC,YAAaT,IAbO,kBAgBf,IAhBe,qCAkBd,KAAMU,KAlBQ,OAmBf,8BAnBe,QAuBf,uBAvBe,QA2Bf,uBA3Be,QA+Bf,2BA/Be,kDAoBX,CACLC,MAAO,2BArBS,iCAwBX,CACLA,MAAO,mCAzBS,iCA4BX,CACLA,MAAO,0BA7BS,iCAgCX,CACLA,MAAO,6CAjCS,iCAoCX,CACLA,MAAO,oCArCS,yDAAH,uDA2CVC,EAAS,uCAAG,+BAAAlF,EAAA,6DAASiE,EAAT,EAASA,MAAOG,EAAhB,EAAgBA,SAAhB,kBAEflF,EAASsF,OAAOW,2BAA2BlB,EAAOG,GAFnC,gCAGd,IAHc,qCAKb,KAAMY,KALO,OAMd,uBANc,QAUd,wBAVc,MAWd,wBAXc,QAed,2BAfc,kDAOV,CACLC,MAAO,kCARQ,iCAYV,CACLA,MAAO,uCAbQ,iCAgBV,CACLA,MAAO,6CAjBQ,iCAoBV,CACLA,MAAO,oCArBQ,yDAAH,sD,kBCxCP7B,EAPD,SAAC,GAAD,IAAGgC,EAAH,EAAGA,UAAcC,EAAjB,oCACZ,6BACE,kBAAC,IAAkBA,GAClBD,EAAY,2BAAIA,GAAiB,OCuEvBE,EAtED,WAAO,IAAD,EACQ9C,mBAAS,CAAEc,MAAO,GAAI2B,MAAO,KADrC,mBACXhB,EADW,KACJsB,EADI,OAEc/C,mBAAS,CAAEc,MAAO,GAAI2B,MAAO,KAF3C,mBAEXb,EAFW,KAEDoB,EAFC,OAGYhD,oBAAS,GAHrB,mBAGXiD,EAHW,KAGFC,EAHE,OAIClD,mBAAS,IAArBmD,EAJW,oBAMdC,EAAUC,cAERC,EAAW,uCAAG,gCAAA9F,EAAA,6DACZ+F,EAAa/B,EAAeC,EAAMX,OAClC0C,EAAgB7B,EAAkBC,EAASd,QAE7CyC,GAAcC,KAChBT,EAAS,2BAAKtB,GAAN,IAAagB,MAAOc,KAC5BP,EAAY,2BAAKpB,GAAN,IAAgBa,MAAOe,MAGpCN,GAAW,GATO,SAWKR,EAAU,CAC/BjB,MAAOA,EAAMX,MACbc,SAAUA,EAASd,QAbH,QAWZ2C,EAXY,QAgBLhB,QACXU,EAASM,EAAShB,OAClBS,GAAW,IAEbE,EAAQM,KAAK,KApBK,2CAAH,qDAsBjB,OACE,kBAAC7E,EAAA,EAAD,KACE,kBAAC8E,EAAA,EAAD,CAAQzH,GAAG,KAAKG,QAAQ,UACxB,kBAACoE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CACEmD,KAAK,QACL9C,YAAY,QACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBiC,EAAS,CAAEjC,MAAOA,EAAO2B,MAAO,UAIlE,kBAAChC,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CACEmD,KAAK,WACL9C,YAAY,WACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OACRkC,EAAY,CAAElC,MAAOA,EAAO2B,MAAO,UAK3C,kBAAChC,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAACa,EAAA,EAAD,CACE0B,QAASA,EACTa,KAAK,YACLxH,QAAS,kBAAMgH,MAHjB,cCgCGS,EArFE,WAAO,IAAD,EACG/D,mBAAS,CAAEc,MAAO,GAAI2B,MAAO,KADhC,mBACdX,EADc,KACRkC,EADQ,OAEKhE,mBAAS,CAAEc,MAAO,GAAI2B,MAAO,KAFlC,mBAEdhB,EAFc,KAEPsB,EAFO,OAGW/C,mBAAS,CAAEc,MAAO,GAAI2B,MAAO,KAHxC,mBAGdb,EAHc,KAGJoB,EAHI,OAIShD,oBAAS,GAJlB,mBAIdiD,EAJc,KAILC,EAJK,OAMFlD,mBAAS,IAArBmD,EANc,oBAQfc,EAAY,uCAAG,kCAAAzG,EAAA,0DACfyF,EADe,oDAGbiB,EAAYrC,EAAcC,EAAKhB,OAC/ByC,EAAa/B,EAAeC,EAAMX,OAClC0C,EAAgB7B,EAAkBC,EAASd,SAE7CyC,GAAcC,GAAiBU,GAPhB,wBAQjBF,EAAQ,2BAAKlC,GAAN,IAAYW,MAAOyB,KAC1BnB,EAAS,2BAAKtB,GAAN,IAAagB,MAAOc,KAC5BP,EAAY,2BAAKpB,GAAN,IAAgBa,MAAOe,KAVjB,kCAcnBN,GAAW,GAdQ,UAgBInB,EAAW,CAChCD,KAAMA,EAAKhB,MACXW,MAAOA,EAAMX,MACbc,SAAUA,EAASd,QAnBF,SAgBb2C,EAhBa,QAsBNhB,QACXU,EAASM,EAAShB,OAClBS,GAAW,IAxBM,4CAAH,qDA4BlB,OACE,kBAACrE,EAAA,EAAD,KACE,kBAAC8E,EAAA,EAAD,CAAQzH,GAAG,KAAKG,QAAQ,aACxB,kBAACoE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CACEmD,KAAK,OACL9C,YAAY,OACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBkD,EAAQ,CAAElD,MAAOA,EAAO2B,MAAO,UAIjE,kBAAChC,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CACEmD,KAAK,OACL9C,YAAY,QACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OAAkBiC,EAAS,CAAEjC,MAAOA,EAAO2B,MAAO,UAIlE,kBAAChC,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CACEmD,KAAK,OACL9C,YAAY,WACZC,SAAU,SAACC,EAAD,OAAMH,EAAN,EAAMA,MAAN,OACRkC,EAAY,CAAElC,MAAOA,EAAO2B,MAAO,UAK3C,kBAAChC,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,KACE,kBAACa,EAAA,EAAD,CACE0B,QAASA,EACTa,KAAK,YACLxH,QAAS,kBAAM2H,MAHjB,gBC7BGE,EA/CC,WAAO,IAAD,EACkBnE,oBAAS,GAD3B,mBACboE,EADa,KACAC,EADA,OAEwBrE,oBAAS,GAFjC,mBAEbsE,EAFa,KAEGC,EAFH,KAkBpB,OACE,kBAAC9D,EAAA,EAAD,KACE,uBAAGzC,GAAG,SAAN,SACA,kBAACyC,EAAA,EAAKC,OAAN,CAAa8D,QAAQ,QAAQvF,MAAO,GAClC,kBAACsC,EAAA,EAAD,CACEkD,QAAM,EACNtI,MAAM,QACNuI,OAAQN,EACR/H,QAAQ,QACRC,QAAS,kBAtBXgI,GACFC,GAAkB,GAEbF,GAAgBD,MAqBnB,kBAAC7C,EAAA,EAAD,CACEkD,QAAM,EACNtI,MAAM,QACNuI,OAAQJ,EACRjI,QAAQ,WACRC,QAAS,kBAtBX8H,GACFC,GAAe,GAEVE,GAAmBD,OAsBxB,kBAAC7D,EAAA,EAAKmD,IAAN,KACE,kBAACnD,EAAA,EAAKC,OAAN,CAAazB,MAAO,IACjBqF,GAAkB,kBAAC,EAAD,MAClBF,GAAe,kBAAC,EAAD,UCEXO,EAhCH,WACV,IACQC,EADM5I,qBAAWJ,GACjBgJ,SAIR,OACE,kBAAC,IAAD,CAAQC,SAAS,KACf,yBAAK/F,UAAU,OACb,yBAAKA,UAAU,kBACb,kBAACD,EAAA,EAAD,CACEC,UAAU,WACVC,UAAQ,EACRC,MAAO,CAAEI,gBAAiBwF,EATlB,UADI,YAYXA,GAAY,kBAAC,EAAD,MAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,KACfH,EAAW,kBAAC,EAAD,MAAgB,kBAAC,IAAD,CAAUI,GAAG,YAE3C,kBAAC,IAAD,CAAOD,KAAK,SAASE,UAAWd,GAC7BS,EAAW,kBAAC,IAAD,CAAUI,GAAG,MAAS,kBAAC,EAAD,aCzB9BE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WClBS,WAACjF,EAAD,GAA+B,IAArBwD,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QAC7B,OAAQ1B,GACN,IAAK,YACH,OAAO,2BACFxD,GADL,IAEEuE,UAAU,EACVrH,IAAKgI,EAAQhI,MAGjB,IAAK,gBACH,OAAO,2BACF8C,GADL,IAEEuE,UAAU,IAGd,IAAK,UACH,OAAO,2BACFvE,GADL,IAEEuE,UAAU,EACVrH,IAAK,KACLI,MAAO,KACP6H,aAAa,IAGjB,IAAK,aACH,OAAO,2BACFnF,GADL,IAEE1C,MAAO4H,EACPC,aAAa,IAGjB,QACE,OAAOnF,I,kBC0CEoF,EA7DE,SAAC5C,GAChB,IAD0B,EAOA6C,qBAAWC,EANhB,CACnBf,SAAU,KACVrH,IAAK,KACLI,MAAO,KACP6H,aAAa,IALW,mBAOnBnF,EAPmB,KAOZuF,EAPY,KAQlBhB,EAA+BvE,EAA/BuE,SAAUrH,EAAqB8C,EAArB9C,IAAKiI,EAAgBnF,EAAhBmF,YAEjBlF,EAAY,kBAChBhD,EAASC,GAAKiD,MAAK,SAACqF,GAAD,OACjBD,EAAS,CACP/B,KAAM,aACN0B,QAASM,EAAIC,MAAK,SAACtI,EAAGuI,GAAJ,OAAWvI,EAAEO,IAAMgI,EAAEhI,IAAM,GAAK,WAIlDiI,EAAUC,sBAAY3F,EAAW,CAAC/C,IAExC2I,qBAAU,WACRC,KAEKX,GAAeZ,GAClBoB,MAED,CAACpB,EAAUoB,EAASR,IAEvB,IAAMW,EAAY,kBAChBzJ,IAASsF,OAAOoE,oBAAmB,SAACjE,GAAD,OAE7ByD,EADJzD,EACa,CACP0B,KAAM,YACN0B,QAAS,CACPhI,IAAK4E,EAAK5E,IACV8I,SAAU3J,IAASsF,OAAOK,YAAYE,cAGjC,CAAEsB,KAAM,sBAQzB,OACE,kBAAC,EAAWyC,SAAZ,CACExF,MAAO,CACLvD,IAAK8C,EAAM9C,IACXqH,SAAUvE,EAAMuE,SAChBjH,MAAO0C,EAAM1C,MACb6H,YAAanF,EAAMmF,YACnBlF,YACAvE,SAbW,WRlDjBW,EAASsF,OAAOuE,UQoDdX,EAAS,CAAE/B,KAAM,eAcdhB,EAAM2D,WC9DbC,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SHuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvG,MAAK,SAAAwG,GACJA,EAAaC,gBAEdC,OAAM,SAAAzE,GACL0E,QAAQ1E,MAAMA,EAAM2E,c","file":"static/js/main.eed71567.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nexport default AppContext;\r\n","import React, { useContext } from \"react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport AppContext from \"../../context/appContext\";\r\n\r\nconst LabelButtons = () => {\r\n  const state = useContext(AppContext);\r\n  const { onLogout } = state;\r\n  return (\r\n    <>\r\n      <Label\r\n        as=\"a\"\r\n        color=\"black\"\r\n        attached=\"top right\"\r\n        content=\"Log Out\"\r\n        onClick={() => onLogout()}\r\n      />\r\n      <Label\r\n        as=\"a\"\r\n        color=\"black\"\r\n        attached=\"bottom left\"\r\n        content=\"Click here for the repository\"\r\n        href=\"https://github.com/AhmedAlihashi/noted\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelButtons;\r\n","import * as firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyAyICImbLgzOPfjatWrhb5M0bo8fxh4nuQ\",\n  authDomain: \"noted-55f73.firebaseapp.com\",\n  databaseURL: \"https://noted-55f73.firebaseio.com\",\n  projectId: \"noted-55f73\",\n  storageBucket: \"noted-55f73.appspot.com\",\n  messagingSenderId: \"405755323077\",\n  appId: \"1:405755323077:web:9d4e464807654c4c37c6ac\",\n  measurementId: \"G-YXMJP7FPBP\",\n};\n\nexport default !firebase.apps.length\n  ? firebase.initializeApp(config)\n  : firebase.app();\n","import firebase from \"../firebase\";\r\nimport \"firebase/firestore\";\r\nimport moment from \"moment\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport const getNotes = async (uid) => {\r\n  const collection = db.collection(`User Notes: ${uid}`);\r\n\r\n  const notes = await collection.get();\r\n  return notes.docs.map((doc) => {\r\n    return { nid: doc.id, ...doc.data() };\r\n  });\r\n};\r\n\r\nexport const addNote = async (uid, title, content, importance) => {\r\n  const collection = db.collection(`User Notes: ${uid}`);\r\n\r\n  const req = await collection.add({\r\n    nid: Date.now(),\r\n    title,\r\n    content,\r\n    importance,\r\n    date: moment().format(\"llll\"),\r\n  });\r\n\r\n  return req;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Card, Label } from \"semantic-ui-react\";\r\nimport AppContext from \"../../context/appContext\";\r\n\r\nconst NoteItem = () => {\r\n  const state = useContext(AppContext);\r\n  const { notes } = state;\r\n\r\n  return (\r\n    <Segment\r\n      className=\"NoteInput\"\r\n      inverted\r\n      style={{\r\n        width: \"100%\",\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"#FDD543\",\r\n      }}\r\n    >\r\n      {notes.map((i, k) => {\r\n        return (\r\n          <Segment\r\n            raised\r\n            key={k}\r\n            style={{\r\n              backgroundColor: \"#C9BF77\",\r\n            }}\r\n          >\r\n            <Label\r\n              color={\r\n                i.importance === \"Lv.1\"\r\n                  ? \"grey\"\r\n                  : i.importance === \"Lv.2\"\r\n                  ? \"blue\"\r\n                  : i.importance === \"Lv.3\"\r\n                  ? \"orange\"\r\n                  : i.importance === \"Lv.4\"\r\n                  ? \"red\"\r\n                  : null\r\n              }\r\n              attached=\"top right\"\r\n              content={i.importance}\r\n            />\r\n            <Label\r\n              size=\"tiny\"\r\n              color=\"black\"\r\n              attached=\"bottom left\"\r\n              content={i.date}\r\n            />\r\n\r\n            <Card\r\n              header={i.title}\r\n              description={i.content}\r\n              style={{\r\n                marginTop: 20,\r\n                marginBottom: 20,\r\n                backgroundColor: \"#F2F2EF\",\r\n              }}\r\n            />\r\n          </Segment>\r\n        );\r\n      })}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NoteItem;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Grid, Segment, Form } from \"semantic-ui-react\";\r\nimport { addNote } from \"../api/notes\";\r\nimport AppContext from \"../context/appContext\";\r\nimport NoteItem from \"./app/NoteItem\";\r\n\r\nconst MainEvent = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [radioValue, setRadioValue] = useState(null);\r\n  const state = useContext(AppContext);\r\n  const { uid, loadNotes, notes } = state;\r\n\r\n  let importance = radioValue;\r\n\r\n  const handleSubmit = async () =>\r\n    await addNote(uid, title, content, importance).then(() => loadNotes());\r\n\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <p id=\"title\">Noted</p>\r\n      </Grid>\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <Segment raised style={{ backgroundColor: \"#DDBA3B\" }}>\r\n            <Form>\r\n              <Form.Input\r\n                label=\"Title\"\r\n                value={title}\r\n                placeholder=\"Title\"\r\n                onChange={(e, { value }) => setTitle(value)}\r\n              />\r\n              <Form.Group inline>\r\n                <label>Level of importance</label>\r\n                <Form.Radio\r\n                  label=\"Lv.1\"\r\n                  value=\"Lv.1\"\r\n                  checked={radioValue === \"Lv.1\"}\r\n                  onChange={(e, { value }) => setRadioValue(value)}\r\n                />\r\n                <Form.Radio\r\n                  label=\"Lv.2\"\r\n                  value=\"Lv.2\"\r\n                  checked={radioValue === \"Lv.2\"}\r\n                  onChange={(e, { value }) => setRadioValue(value)}\r\n                />\r\n                <Form.Radio\r\n                  label=\"Lv.3\"\r\n                  value=\"Lv.3\"\r\n                  checked={radioValue === \"Lv.3\"}\r\n                  onChange={(e, { value }) => setRadioValue(value)}\r\n                />\r\n                <Form.Radio\r\n                  label=\"Lv.4\"\r\n                  value=\"Lv.4\"\r\n                  checked={radioValue === \"Lv.4\"}\r\n                  onChange={(e, { value }) => setRadioValue(value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.TextArea\r\n                label=\"Content\"\r\n                value={content}\r\n                placeholder=\"Enter note data here\"\r\n                onChange={(e, { value }) => setContent(value)}\r\n              />\r\n              <Form.Button color=\"black\" onClick={() => handleSubmit()}>\r\n                Submit\r\n              </Form.Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>{notes && <NoteItem />}</Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainEvent;\r\n","export const emailValidator = email => {\n  const re = /\\S+@\\S+\\.\\S+/;\n\n  if (!email || email.length <= 0) return \"Email cannot be empty.\";\n  if (!re.test(email)) return \"Ooops! We need a valid email address.\";\n\n  return \"\";\n};\n\nexport const passwordValidator = password => {\n  if (!password || password.length <= 0) return \"Password cannot be empty.\";\n\n  return \"\";\n};\n\nexport const nameValidator = name => {\n  if (!name || name.length <= 0) return \"Name cannot be empty.\";\n\n  return \"\";\n};\n","import firebase from \"../firebase\";\nimport \"firebase/auth\";\n\nexport const logoutUser = () => {\n  firebase.auth().signOut();\n};\n\nexport const signInUser = async ({ name, email, password }) => {\n  try {\n    await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((cred) =>\n        firebase.firestore().collection(\"users\").doc(cred.user.uid).set({\n          name: name,\n          email: email,\n        })\n      );\n\n    firebase.auth().currentUser.updateProfile({\n      displayName: name,\n    });\n\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/email-already-in-use\":\n        return {\n          error: \"E-mail already in use.\",\n        };\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid e-mail address format.\",\n        };\n      case \"auth/weak-password\":\n        return {\n          error: \"Password is too weak.\",\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\",\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\",\n        };\n    }\n  }\n};\n\nexport const loginUser = async ({ email, password }) => {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid email address format.\",\n        };\n      case \"auth/user-not-found\":\n      case \"auth/wrong-password\":\n        return {\n          error: \"Invalid email address or password.\",\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\",\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\",\n        };\n    }\n  }\n};\n\nexport const sendEmailWithPassword = async (email) => {\n  try {\n    await firebase.auth().sendPasswordResetEmail(email);\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid email address format.\",\n        };\n      case \"auth/user-not-found\":\n        return {\n          error: \"User with this email does not exist.\",\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\",\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\",\n        };\n    }\n  }\n};\n","import React from \"react\";\r\nimport { Input as SemanticInput } from \"semantic-ui-react\";\r\n\r\nconst Input = ({ errorText, ...props }) => (\r\n  <div>\r\n    <SemanticInput {...props} />\r\n    {errorText ? <p>{errorText}</p> : null}\r\n  </div>\r\n);\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Header, Button, Segment } from \"semantic-ui-react\";\r\nimport { emailValidator, passwordValidator } from \"../../core/utils\";\r\nimport { loginUser } from \"../../api/auth\";\r\nimport Input from \"../reusable/Input\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [setError] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogin = async () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const response = await loginUser({\r\n      email: email.value,\r\n      password: password.value,\r\n    });\r\n\r\n    if (response.error) {\r\n      setError(response.error);\r\n      setLoading(false);\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Segment>\r\n      <Header as=\"h2\" content=\"Login\" />\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={(e, { value }) => setEmail({ value: value, error: \"\" })}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={(e, { value }) =>\r\n                setPassword({ value: value, error: \"\" })\r\n              }\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              loading={loading}\r\n              mode=\"contained\"\r\n              onClick={() => handleLogin()}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Header, Button, Segment } from \"semantic-ui-react\";\r\nimport { signInUser } from \"../../api/auth\";\r\nimport Input from \"../reusable/Input\";\r\nimport {\r\n  nameValidator,\r\n  emailValidator,\r\n  passwordValidator,\r\n} from \"../../core/utils\";\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState({ value: \"\", error: \"\" });\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [setError] = useState(\"\");\r\n\r\n  const handleSignUp = async () => {\r\n    if (loading) return;\r\n\r\n    const nameError = nameValidator(name.value);\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError || nameError) {\r\n      setName({ ...name, error: nameError });\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const response = await signInUser({\r\n      name: name.value,\r\n      email: email.value,\r\n      password: password.value,\r\n    });\r\n\r\n    if (response.error) {\r\n      setError(response.error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment>\r\n      <Header as=\"h2\" content=\"Register\" />\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onChange={(e, { value }) => setName({ value: value, error: \"\" })}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              onChange={(e, { value }) => setEmail({ value: value, error: \"\" })}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Password\"\r\n              onChange={(e, { value }) =>\r\n                setPassword({ value: value, error: \"\" })\r\n              }\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              loading={loading}\r\n              mode=\"contained\"\r\n              onClick={() => handleSignUp()}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button } from \"semantic-ui-react\";\r\nimport Login from \"./onboard/Login\";\r\nimport Register from \"./onboard/Register\";\r\n\r\nconst OnBoard = () => {\r\n  const [toggleLogin, setToggleLogin] = useState(false);\r\n  const [toggleRegister, setToggleRegister] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    if (toggleRegister) {\r\n      setToggleRegister(false);\r\n    }\r\n    return setToggleLogin(!toggleLogin);\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    if (toggleLogin) {\r\n      setToggleLogin(false);\r\n    }\r\n    return setToggleRegister(!toggleRegister);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <p id=\"title\">Noted</p>\r\n      <Grid.Column floated=\"right\" width={4}>\r\n        <Button\r\n          toggle\r\n          color=\"black\"\r\n          active={toggleLogin}\r\n          content=\"Login\"\r\n          onClick={() => handleLogin()}\r\n        />\r\n        <Button\r\n          toggle\r\n          color=\"black\"\r\n          active={toggleRegister}\r\n          content=\"Register\"\r\n          onClick={() => handleRegister()}\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Row>\r\n        <Grid.Column width={16}>\r\n          {toggleRegister && <Register />}\r\n          {toggleLogin && <Login />}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OnBoard;\r\n","import React, { useContext } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { Segment } from \"semantic-ui-react\";\nimport AppContext from \"./context/appContext\";\nimport LabelButtons from \"./components/app/LabelButtons\";\n\nimport MainEvent from \"./components/MainEvent\";\nimport OnBoard from \"./components/OnBoard\";\n\nconst App = () => {\n  const state = useContext(AppContext);\n  const { loggedIn } = state;\n  const onboardColors = \"#E8ECFF\";\n  const mainColor = \"#FDD543\";\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <div className=\"App-background\">\n          <Segment\n            className=\"MainCard\"\n            inverted\n            style={{ backgroundColor: loggedIn ? mainColor : onboardColors }}\n          >\n            {loggedIn && <LabelButtons />}\n\n            <Switch>\n              <Route exact path=\"/\">\n                {loggedIn ? <MainEvent /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/login\" component={OnBoard}>\n                {loggedIn ? <Redirect to=\"/\" /> : <OnBoard />}\n              </Route>\n            </Switch>\n          </Segment>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        uid: payload.uid,\r\n      };\r\n\r\n    case \"NOT_LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n      };\r\n\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        uid: null,\r\n        notes: null,\r\n        notesLoaded: false,\r\n      };\r\n\r\n    case \"LOAD_NOTES\":\r\n      return {\r\n        ...state,\r\n        notes: payload,\r\n        notesLoaded: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer, useCallback, useEffect } from \"react\";\r\n\r\n//context\r\nimport AppContext from \"./appContext\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n//firebase\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport { logoutUser } from \"../api/auth\";\r\nimport { getNotes } from \"../api/notes\";\r\n\r\nconst AppState = (props) => {\r\n  const initialState = {\r\n    loggedIn: null,\r\n    uid: null,\r\n    notes: null,\r\n    notesLoaded: false,\r\n  };\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { loggedIn, uid, notesLoaded } = state;\r\n\r\n  const loadNotes = () =>\r\n    getNotes(uid).then((res) =>\r\n      dispatch({\r\n        type: \"LOAD_NOTES\",\r\n        payload: res.sort((a, b) => (a.nid < b.nid ? 1 : -1)),\r\n      })\r\n    );\r\n\r\n  const onNotes = useCallback(loadNotes, [uid]);\r\n\r\n  useEffect(() => {\r\n    authCheck();\r\n\r\n    if (!notesLoaded && loggedIn) {\r\n      onNotes();\r\n    }\r\n  }, [loggedIn, onNotes, notesLoaded]);\r\n\r\n  const authCheck = () =>\r\n    firebase.auth().onAuthStateChanged((user) =>\r\n      user\r\n        ? dispatch({\r\n            type: \"LOGGED_IN\",\r\n            payload: {\r\n              uid: user.uid,\r\n              username: firebase.auth().currentUser.displayName,\r\n            },\r\n          })\r\n        : dispatch({ type: \"NOT_LOGGED_IN\" })\r\n    );\r\n\r\n  const onLogout = () => {\r\n    logoutUser();\r\n    dispatch({ type: \"LOG_OUT\" });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        uid: state.uid,\r\n        loggedIn: state.loggedIn,\r\n        notes: state.notes,\r\n        notesLoaded: state.notesLoaded,\r\n        loadNotes,\r\n        onLogout,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\nexport default AppState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AppState from \"./context/AppState\";\n\nReactDOM.render(\n  <AppState>\n    <App />\n  </AppState>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}