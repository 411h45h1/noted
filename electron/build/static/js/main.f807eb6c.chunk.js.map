{"version":3,"sources":["core/media.js","context/appContext.js","components/app/LabelButtons.js","components/app/NoteItem.js","firebase.js","api/notes.js","components/responsive/ResponsiveInput.js","components/responsive/Note_Scroll.js","components/MainEvent.js","core/utils.js","api/auth.js","components/reusable/Input.js","core/coldStore.js","components/onboard/Login.js","components/onboard/Register.js","components/OnBoard.js","App.js","serviceWorker.js","context/appReducer.js","context/AppState.js","index.js"],"names":["AppMedia","createMedia","breakpoints","mobile","tablet","computer","largeScreen","widescreen","Media","createMediaStyle","MediaContextProvider","AppContext","createContext","LabelButtons","onLogout","useContext","Grid","Column","floated","width","Label","Group","as","color","content","href","target","rel","onClick","icon","window","close","NoteItem","state","uid","notes","removeNote","map","i","k","key","Segment","raised","style","backgroundColor","importance","attached","size","nid","date","Card","header","title","description","marginTop","marginBottom","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getNotes","a","collection","get","docs","doc","id","data","addNote","Date","now","set","moment","format","req","deleteNote","delete","ResponsiveInput","contentRows","useState","setTitle","setContent","radioValue","setRadioValue","handleSubmit","then","loadNotes","Form","Input","label","value","placeholder","onChange","e","inline","Radio","checked","TextArea","rows","Button","NOTE_SCROLL_MOBILE","col","fluid","inverted","minHeight","maxHeight","overflowY","columns","NOTE_SCROLL_TABLET","NOTE_SCROLL_COMPUTER","NOTE_SCROLL_LARGESCREEN","NOTE_SCROLL_GREATER","MainEvent","Row","at","greaterThan","emailValidator","email","test","passwordValidator","password","signInUser","name","auth","createUserWithEmailAndPassword","cred","user","currentUser","updateProfile","displayName","code","error","loginUser","signInWithEmailAndPassword","errorText","props","ColdStorage","require","getStorage","type","setStorage","history","createBrowserHistory","basename","location","pathname","Login","setEmail","setPassword","loading","setLoading","setError","useEffect","handleLogin","emailError","passwordError","response","push","setTimeout","centered","textAlign","Header","mode","Register","handleSignUp","OnBoard","toggleLogin","setToggleLogin","toggleRegister","setToggleRegister","toggle","active","App","loggedIn","console","log","innerHeight","innerWidth","className","exact","path","to","component","Boolean","hostname","match","payload","notesLoaded","AppState","useReducer","appReducer","dispatch","res","sort","b","onNotes","useCallback","authCheck","onAuthStateChanged","username","Provider","signOut","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f807eb6c.chunk.js","sourcesContent":["import { createMedia } from \"@artsy/fresnel\";\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: {\r\n    mobile: 320,\r\n    tablet: 768,\r\n    computer: 992,\r\n    largeScreen: 1400,\r\n    widescreen: 1920,\r\n  },\r\n});\r\n\r\nexport const mediaStyles = AppMedia.createMediaStyle();\r\nexport const { Media, MediaContextProvider } = AppMedia;\r\n","import { createContext } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nexport default AppContext;\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Label } from \"semantic-ui-react\";\r\nimport AppContext from \"../../context/appContext\";\r\n\r\nconst LabelButtons = () => {\r\n  const state = useContext(AppContext);\r\n  const { onLogout } = state;\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Grid.Column floated=\"right\" width={6}>\r\n          <Label.Group>\r\n            <Label\r\n              as={\"a\"}\r\n              color=\"black\"\r\n              content=\"Click here for the repository\"\r\n              href=\"https://github.com/AhmedAlihashi/noted\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            />\r\n            <Label\r\n              as={\"a\"}\r\n              color=\"grey\"\r\n              content=\"Log Out\"\r\n              onClick={() => onLogout()}\r\n            />\r\n            <Label\r\n              as={\"a\"}\r\n              icon=\"power off\"\r\n              color=\"red\"\r\n              onClick={() => {\r\n                window.close();\r\n              }}\r\n            />\r\n          </Label.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelButtons;\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Segment, Card, Label } from \"semantic-ui-react\";\r\nimport AppContext from \"../../context/appContext\";\r\n\r\nconst NoteItem = () => {\r\n  const state = useContext(AppContext);\r\n  const { uid, notes, removeNote } = state;\r\n\r\n  return (\r\n    notes &&\r\n    notes.map((i, k) => (\r\n      <Grid.Column key={k}>\r\n        <Segment\r\n          raised\r\n          style={{\r\n            backgroundColor: \"#C9BF77\",\r\n          }}\r\n        >\r\n          {i.importance && (\r\n            <Label\r\n              color={\r\n                i.importance === \"Lv.1\"\r\n                  ? \"grey\"\r\n                  : i.importance === \"Lv.2\"\r\n                  ? \"blue\"\r\n                  : i.importance === \"Lv.3\"\r\n                  ? \"orange\"\r\n                  : i.importance === \"Lv.4\"\r\n                  ? \"red\"\r\n                  : null\r\n              }\r\n              attached=\"top right\"\r\n              content={i.importance}\r\n            />\r\n          )}\r\n          <Label\r\n            as=\"a\"\r\n            size=\"tiny\"\r\n            attached=\"top left\"\r\n            content=\"❌\"\r\n            onClick={() => removeNote(uid, i.nid)}\r\n            style={{\r\n              backgroundColor: \"#C9BF77\",\r\n            }}\r\n          />\r\n          <Label\r\n            size=\"tiny\"\r\n            color=\"black\"\r\n            attached=\"bottom left\"\r\n            content={i.date}\r\n          />\r\n\r\n          <Card\r\n            header={i.title}\r\n            description={i.content}\r\n            style={{\r\n              marginTop: 20,\r\n              marginBottom: 30,\r\n              backgroundColor: \"#F2F2EF\",\r\n            }}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default NoteItem;\r\n","import * as firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyAyICImbLgzOPfjatWrhb5M0bo8fxh4nuQ\",\n  authDomain: \"noted-55f73.firebaseapp.com\",\n  databaseURL: \"https://noted-55f73.firebaseio.com\",\n  projectId: \"noted-55f73\",\n  storageBucket: \"noted-55f73.appspot.com\",\n  messagingSenderId: \"405755323077\",\n  appId: \"1:405755323077:web:9d4e464807654c4c37c6ac\",\n  measurementId: \"G-YXMJP7FPBP\",\n};\n\nexport default !firebase.apps.length\n  ? firebase.initializeApp(config)\n  : firebase.app();\n","import firebase from \"../firebase\";\r\nimport \"firebase/firestore\";\r\nimport moment from \"moment\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport const getNotes = async (uid) => {\r\n  const collection = db.collection(`User Notes: ${uid}`);\r\n\r\n  const notes = await collection.get();\r\n  return notes.docs.map((doc) => {\r\n    return { nid: doc.id, ...doc.data() };\r\n  });\r\n};\r\n\r\nexport const addNote = async (uid, title, content, importance) => {\r\n  const collection = db.collection(`User Notes: ${uid}`);\r\n  const nid = Date.now();\r\n\r\n  const req = await collection.doc(`${nid}`).set({\r\n    nid: nid,\r\n    title,\r\n    content,\r\n    importance,\r\n    date: moment().format(\"llll\"),\r\n  });\r\n\r\n  return req;\r\n};\r\n\r\nexport const deleteNote = async (uid, nid) => {\r\n  const collection = db.collection(`User Notes: ${uid}`);\r\n\r\n  const req = await collection.doc(`${nid}`).delete();\r\n  return req;\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Segment, Form } from \"semantic-ui-react\";\r\nimport { addNote } from \"../../api/notes\";\r\nimport AppContext from \"../../context/appContext\";\r\n\r\nconst ResponsiveInput = ({ contentRows, size }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [radioValue, setRadioValue] = useState(null);\r\n  const state = useContext(AppContext);\r\n\r\n  let importance = radioValue;\r\n\r\n  const handleSubmit = async () =>\r\n    await addNote(uid, title, content, importance).then(() => loadNotes());\r\n  const { uid, loadNotes } = state;\r\n\r\n  return (\r\n    <Segment raised style={{ backgroundColor: \"#DDBA3B\" }}>\r\n      <Form size={size}>\r\n        <Form.Input\r\n          label=\"Title\"\r\n          value={title}\r\n          placeholder=\"Title\"\r\n          onChange={(e, { value }) => setTitle(value)}\r\n        />\r\n        <Form.Group inline>\r\n          <label>Level of importance</label>\r\n          <Form.Radio\r\n            label=\"Lv.1\"\r\n            value=\"Lv.1\"\r\n            checked={radioValue === \"Lv.1\"}\r\n            onChange={(e, { value }) => setRadioValue(value)}\r\n          />\r\n          <Form.Radio\r\n            label=\"Lv.2\"\r\n            value=\"Lv.2\"\r\n            checked={radioValue === \"Lv.2\"}\r\n            onChange={(e, { value }) => setRadioValue(value)}\r\n          />\r\n          <Form.Radio\r\n            label=\"Lv.3\"\r\n            value=\"Lv.3\"\r\n            checked={radioValue === \"Lv.3\"}\r\n            onChange={(e, { value }) => setRadioValue(value)}\r\n          />\r\n          <Form.Radio\r\n            label=\"Lv.4\"\r\n            value=\"Lv.4\"\r\n            checked={radioValue === \"Lv.4\"}\r\n            onChange={(e, { value }) => setRadioValue(value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.TextArea\r\n          rows={contentRows}\r\n          label=\"Content\"\r\n          value={content}\r\n          placeholder=\"Enter your note here\"\r\n          onChange={(e, { value }) => setContent(value)}\r\n        />\r\n        <Form.Button color=\"black\" onClick={() => handleSubmit()}>\r\n          Submit\r\n        </Form.Button>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default ResponsiveInput;\r\n","import React from \"react\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport NoteItem from \"../app/NoteItem\";\r\n\r\nexport const NOTE_SCROLL_MOBILE = ({ col }) => {\r\n  return (\r\n    <Segment\r\n      fluid\r\n      inverted\r\n      style={{\r\n        marginTop: 10,\r\n        marginBottom: 20,\r\n        minHeight: \"20vh\",\r\n        maxHeight: \"25vh\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"#FDD543\",\r\n      }}\r\n    >\r\n      <Grid columns={col}>\r\n        <NoteItem />\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport const NOTE_SCROLL_TABLET = ({ col }) => {\r\n  return (\r\n    <Segment\r\n      fluid\r\n      inverted\r\n      style={{\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"#FDD543\",\r\n      }}\r\n    >\r\n      <Grid columns={col}>\r\n        <NoteItem />\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport const NOTE_SCROLL_COMPUTER = ({ col }) => {\r\n  return (\r\n    <Segment\r\n      fluid\r\n      inverted\r\n      style={{\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"#FDD543\",\r\n      }}\r\n    >\r\n      <Grid columns={col}>\r\n        <NoteItem />\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport const NOTE_SCROLL_LARGESCREEN = ({ col }) => {\r\n  return (\r\n    <Segment\r\n      fluid\r\n      inverted\r\n      style={{\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"#FDD543\",\r\n      }}\r\n    >\r\n      <Grid columns={col}>\r\n        <NoteItem />\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport const NOTE_SCROLL_GREATER = ({ col }) => {\r\n  return (\r\n    <Segment\r\n      fluid\r\n      inverted\r\n      style={{\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"scroll\",\r\n        backgroundColor: \"#FDD543\",\r\n      }}\r\n    >\r\n      <Grid columns={col}>\r\n        <NoteItem />\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Media } from \"../core/media\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport NoteItem from \"./app/NoteItem\";\r\nimport { ResponsiveInput } from \"./responsive\";\r\n\r\nimport {\r\n  NOTE_SCROLL_MOBILE,\r\n  NOTE_SCROLL_TABLET,\r\n  NOTE_SCROLL_COMPUTER,\r\n  NOTE_SCROLL_LARGESCREEN,\r\n  NOTE_SCROLL_GREATER,\r\n} from \"./responsive/Note_Scroll\";\r\n\r\nconst MainEvent = () => {\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <p id=\"title\">Noted</p>\r\n      </Grid>\r\n      <Grid>\r\n        <Grid.Row>\r\n          {/* @ mobile */}\r\n          <Grid.Column as={Media} at=\"mobile\" width={16}>\r\n            <ResponsiveInput size={\"large\"} contentRows={1} />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column as={Media} at=\"mobile\" width={16}>\r\n            <NOTE_SCROLL_MOBILE col={1} />\r\n          </Grid.Column>\r\n\r\n          {/* @ tablet */}\r\n\r\n          <Grid.Column as={Media} at=\"tablet\" width={9}>\r\n            <ResponsiveInput size={\"large\"} contentRows={3} />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column as={Media} at=\"tablet\" width={7}>\r\n            <NOTE_SCROLL_TABLET col={1} />\r\n          </Grid.Column>\r\n\r\n          {/* @ computer */}\r\n\r\n          <Grid.Column as={Media} at=\"computer\" width={7}>\r\n            <ResponsiveInput size={\"large\"} contentRows={3} />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column as={Media} at=\"computer\" width={9}>\r\n            <NOTE_SCROLL_COMPUTER col={2} />\r\n          </Grid.Column>\r\n\r\n          {/* @ largeScreen */}\r\n\r\n          <Grid.Column as={Media} at=\"largeScreen\" width={6}>\r\n            <ResponsiveInput size={\"big\"} contentRows={3} />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column as={Media} at=\"largeScreen\" width={9}>\r\n            <NOTE_SCROLL_LARGESCREEN col={3} />\r\n          </Grid.Column>\r\n\r\n          {/* @ greater */}\r\n\r\n          <Grid.Column as={Media} greaterThan=\"largeScreen\" width={6}>\r\n            <ResponsiveInput size={\"big\"} contentRows={5} />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column as={Media} greaterThan=\"largeScreen\" width={10}>\r\n            <NOTE_SCROLL_GREATER col={4} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainEvent;\r\n","export const emailValidator = email => {\n  const re = /\\S+@\\S+\\.\\S+/;\n\n  if (!email || email.length <= 0) return \"Email cannot be empty.\";\n  if (!re.test(email)) return \"Ooops! We need a valid email address.\";\n\n  return \"\";\n};\n\nexport const passwordValidator = password => {\n  if (!password || password.length <= 0) return \"Password cannot be empty.\";\n\n  return \"\";\n};\n\nexport const nameValidator = name => {\n  if (!name || name.length <= 0) return \"Name cannot be empty.\";\n\n  return \"\";\n};\n","import firebase from \"../firebase\";\nimport \"firebase/auth\";\n\nexport const logoutUser = () => {\n  firebase.auth().signOut();\n};\n\nexport const signInUser = async ({ name, email, password }) => {\n  try {\n    await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((cred) =>\n        firebase.firestore().collection(\"users\").doc(cred.user.uid).set({\n          name: name,\n          email: email,\n        })\n      );\n\n    firebase.auth().currentUser.updateProfile({\n      displayName: name,\n    });\n\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/email-already-in-use\":\n        return {\n          error: \"E-mail already in use.\",\n        };\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid e-mail address format.\",\n        };\n      case \"auth/weak-password\":\n        return {\n          error: \"Password is too weak.\",\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\",\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\",\n        };\n    }\n  }\n};\n\nexport const loginUser = async ({ email, password }) => {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid email address format.\",\n        };\n      case \"auth/user-not-found\":\n      case \"auth/wrong-password\":\n        return {\n          error: \"Invalid email address or password.\",\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\",\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\",\n        };\n    }\n  }\n};\n\nexport const sendEmailWithPassword = async (email) => {\n  try {\n    await firebase.auth().sendPasswordResetEmail(email);\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid email address format.\",\n        };\n      case \"auth/user-not-found\":\n        return {\n          error: \"User with this email does not exist.\",\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\",\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\",\n        };\n    }\n  }\n};\n","import React from \"react\";\r\nimport { Input as SemanticInput } from \"semantic-ui-react\";\r\n\r\nconst Input = ({ errorText, ...props }) => (\r\n  <div>\r\n    <SemanticInput {...props} />\r\n    {errorText ? <p>{errorText}</p> : null}\r\n  </div>\r\n);\r\n\r\nexport default Input;\r\n","const Store = window.require(\"electron-store\");\r\nconst ColdStorage = new Store();\r\n\r\nexport const getStorage = (type) => ColdStorage.get(type);\r\nexport const setStorage = (type, value) => ColdStorage.set(type, value);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Header, Button, Segment } from \"semantic-ui-react\";\r\nimport { emailValidator, passwordValidator } from \"../../core/utils\";\r\nimport { loginUser } from \"../../api/auth\";\r\nimport Input from \"../reusable/Input\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { setStorage, getStorage } from \"../../core/coldStore\";\r\n\r\nconst history = createBrowserHistory({\r\n  basename: window.location.pathname,\r\n});\r\nconst Login = () => {\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    if (getStorage(\"email\") && getStorage(\"password\")) {\r\n      setEmail({ value: getStorage(\"email\"), error: \"\" });\r\n      setPassword({ value: getStorage(\"password\"), error: \"\" });\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const response = await loginUser({\r\n      email: email.value,\r\n      password: password.value,\r\n    });\r\n\r\n    if (response.error) {\r\n      setError(response.error);\r\n      setLoading(false);\r\n    } else {\r\n      setStorage(\"email\", email.value);\r\n      setStorage(\"password\", password.value);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setEmail({ value: \"\", error: \"\" });\r\n    setPassword({ value: \"\", error: \"\" });\r\n    setTimeout(() => setError(null), 500);\r\n  };\r\n\r\n  if (error && email.value !== \"\" && password.value !== \"\") {\r\n    clearInputs();\r\n  }\r\n\r\n  return (\r\n    <Grid centered>\r\n      <Segment style={{ textAlign: \"center\" }}>\r\n        <Header as=\"h2\" content=\"Login\" />\r\n        <Grid.Column>\r\n          {error && <p>{error}</p>}\r\n          <Input\r\n            type=\"email\"\r\n            value={email.value}\r\n            placeholder=\"Email\"\r\n            onChange={(e, { value }) => setEmail({ value: value, error: \"\" })}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Input\r\n            type=\"password\"\r\n            value={password.value}\r\n            placeholder=\"Password\"\r\n            onChange={(e, { value }) =>\r\n              setPassword({ value: value, error: \"\" })\r\n            }\r\n            style={{ marginTop: 10 }}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Button\r\n            loading={loading}\r\n            mode=\"contained\"\r\n            onClick={() => {\r\n              handleLogin();\r\n            }}\r\n            style={{ marginTop: 10 }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid.Column>\r\n      </Segment>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Header, Button, Segment } from \"semantic-ui-react\";\r\nimport { signInUser } from \"../../api/auth\";\r\nimport Input from \"../reusable/Input\";\r\nimport { emailValidator, passwordValidator } from \"../../core/utils\";\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const handleSignUp = async () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const response = await signInUser({\r\n      email: email.value,\r\n      password: password.value,\r\n    });\r\n\r\n    if (response.error) {\r\n      setError(response.error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setEmail({ value: \"\", error: \"\" });\r\n    setPassword({ value: \"\", error: \"\" });\r\n    setTimeout(() => setError(null), 500);\r\n  };\r\n\r\n  if (error && email.value !== \"\" && password.value !== \"\") {\r\n    clearInputs();\r\n  }\r\n\r\n  return (\r\n    <Grid centered>\r\n      <Segment style={{ textAlign: \"center\" }}>\r\n        <Header as=\"h2\" content=\"Register\" />\r\n        <Grid.Column>\r\n          {error && <p>{error}</p>}\r\n\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email.value}\r\n            onChange={(e, { value }) => setEmail({ value: value, error: \"\" })}\r\n            style={{ marginTop: 10 }}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password.value}\r\n            onChange={(e, { value }) =>\r\n              setPassword({ value: value, error: \"\" })\r\n            }\r\n            style={{ marginTop: 10 }}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Button\r\n            loading={loading}\r\n            mode=\"contained\"\r\n            onClick={() => {\r\n              handleSignUp();\r\n            }}\r\n            style={{ marginTop: 10 }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Grid.Column>\r\n      </Segment>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button } from \"semantic-ui-react\";\r\nimport Login from \"./onboard/Login\";\r\nimport Register from \"./onboard/Register\";\r\n\r\nconst OnBoard = () => {\r\n  const [toggleLogin, setToggleLogin] = useState(false);\r\n  const [toggleRegister, setToggleRegister] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    if (toggleRegister) {\r\n      setToggleRegister(false);\r\n    }\r\n    return setToggleLogin(!toggleLogin);\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    if (toggleLogin) {\r\n      setToggleLogin(false);\r\n    }\r\n    return setToggleRegister(!toggleRegister);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <Grid.Column width={16}>\r\n          <Button.Group floated=\"right\">\r\n            <Button\r\n              toggle\r\n              color=\"black\"\r\n              active={toggleLogin}\r\n              content=\"Login\"\r\n              onClick={() => handleLogin()}\r\n            />\r\n            <Button\r\n              toggle\r\n              color=\"black\"\r\n              active={toggleRegister}\r\n              content=\"Register\"\r\n              onClick={() => handleRegister()}\r\n            />\r\n          </Button.Group>\r\n        </Grid.Column>\r\n        <p id=\"title\">Noted</p>\r\n\r\n        <Grid.Column width={16}>\r\n          {toggleRegister && <Register />}\r\n          {toggleLogin && <Login />}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OnBoard;\r\n","import React, { useContext } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { MediaContextProvider } from \"./core/media\";\n\nimport { Grid, Segment } from \"semantic-ui-react\";\nimport AppContext from \"./context/appContext\";\nimport LabelButtons from \"./components/app/LabelButtons\";\n\nimport MainEvent from \"./components/MainEvent\";\nimport OnBoard from \"./components/OnBoard\";\n\nconst App = () => {\n  const state = useContext(AppContext);\n  const { loggedIn } = state;\n  const onboardColors = \"#E8ECFF\";\n  const mainColor = \"#FDD543\";\n\n  return (\n    console.log(\"H\", window.innerHeight, \"w\", window.innerWidth),\n    (\n      <Router basename=\"/\">\n        <MediaContextProvider>\n          <div className=\"App\">\n            <Grid centered columns={1}>\n              <Grid.Column>\n                <Segment\n                  className=\"MainCard\"\n                  inverted\n                  style={{\n                    backgroundColor: loggedIn ? mainColor : onboardColors,\n                  }}\n                >\n                  {loggedIn && <LabelButtons />}\n\n                  <Switch>\n                    <Route exact path=\"/\">\n                      {loggedIn ? <MainEvent /> : <Redirect to=\"/login\" />}\n                    </Route>\n                    <Route path=\"/login\" component={OnBoard}>\n                      {loggedIn ? <Redirect to=\"/\" /> : <OnBoard />}\n                    </Route>\n                  </Switch>\n                </Segment>{\" \"}\n              </Grid.Column>\n            </Grid>\n          </div>\n        </MediaContextProvider>\n      </Router>\n    )\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        uid: payload.uid,\r\n      };\r\n\r\n    case \"NOT_LOGGED_IN\":\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n      };\r\n\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        uid: null,\r\n        notes: null,\r\n        notesLoaded: false,\r\n      };\r\n\r\n    case \"LOAD_NOTES\":\r\n      return {\r\n        ...state,\r\n        notes: payload,\r\n        notesLoaded: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer, useCallback, useEffect } from \"react\";\r\n\r\n//context\r\nimport AppContext from \"./appContext\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n//firebase\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport { logoutUser } from \"../api/auth\";\r\nimport { getNotes, deleteNote } from \"../api/notes\";\r\n\r\nconst AppState = (props) => {\r\n  const initialState = {\r\n    loggedIn: null,\r\n    uid: null,\r\n    notes: null,\r\n    notesLoaded: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { loggedIn, uid, notesLoaded } = state;\r\n\r\n  const loadNotes = () =>\r\n    getNotes(uid).then((res) =>\r\n      dispatch({\r\n        type: \"LOAD_NOTES\",\r\n        payload: res.sort((a, b) => (a.nid < b.nid ? 1 : -1)),\r\n      })\r\n    );\r\n\r\n  const onNotes = useCallback(loadNotes, [uid]);\r\n\r\n  useEffect(() => {\r\n    authCheck();\r\n\r\n    if (!notesLoaded && loggedIn) {\r\n      onNotes();\r\n    }\r\n  }, [loggedIn, onNotes, notesLoaded]);\r\n\r\n  const authCheck = () =>\r\n    firebase.auth().onAuthStateChanged((user) =>\r\n      user\r\n        ? dispatch({\r\n            type: \"LOGGED_IN\",\r\n            payload: {\r\n              uid: user.uid,\r\n              username: firebase.auth().currentUser.displayName,\r\n            },\r\n          })\r\n        : dispatch({ type: \"NOT_LOGGED_IN\" })\r\n    );\r\n\r\n  const onLogout = () => {\r\n    logoutUser();\r\n    dispatch({ type: \"LOG_OUT\" });\r\n  };\r\n\r\n  const removeNote = (uid, nid) => deleteNote(uid, nid).then(() => onNotes());\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        uid: state.uid,\r\n        loggedIn: state.loggedIn,\r\n        notes: state.notes,\r\n        notesLoaded: state.notesLoaded,\r\n        loadNotes,\r\n        onLogout,\r\n        removeNote,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\nexport default AppState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AppState from \"./context/AppState\";\n\nReactDOM.render(\n  <AppState>\n    <App />\n  </AppState>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}